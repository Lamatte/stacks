global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    platform: 'doc'


alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alert-manager:9093

rule_files:
  - "/etc/prometheus/*.rules.yml"

scrape_configs:
  - job_name: 'prometheus'

  - job_name: 'dockerswarm'
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: tasks
    relabel_configs:
      # Only keep containers that should be running.
      - source_labels: [ __meta_dockerswarm_task_desired_state ]
        regex: running
        action: keep
      # Drop tasks with missing metadata
      - source_labels: [ __meta_dockerswarm_task_id ]
        regex: .+
        action: keep
      - source_labels: [ __meta_dockerswarm_service_name ]
        regex: .+
        action: keep
      # Drop tasks on unreachable networks
      - source_labels: [ __meta_dockerswarm_network_name ]
        regex: ^monitornetwork$
        action: keep
      # Use prometheus-job Swarm label to enable Prometheus scraping metrics
      - source_labels: [ __meta_dockerswarm_service_label_prometheus_job ]
        regex: .+
        action: keep
      # Use the prometheus-job Swarm label as Prometheus job to scrape metric
      - source_labels: [ __meta_dockerswarm_service_label_prometheus_job ]
        action: replace
        target_label: job
      # Use the prometheus-path Swarm label as Prometheus path to scrape metric
      - source_labels: [ __meta_dockerswarm_service_label_prometheus_path ]
        action: replace
        target_label: __metrics_path__
      # Use the prometheus-port Swarm label as Prometheus port to scrape metric
      - source_labels: [ __address__, __meta_dockerswarm_service_label_prometheus_port ]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      # Use the prometheus-scheme Swarm label as Prometheus scheme to scrape metric
      - source_labels: [ __meta_dockerswarm_service_label_prometheus_scheme ]
        action: replace
        target_label: __scheme__
        regex: (https?)
      # Map labels
      - source_labels: [ __meta_dockerswarm_service_name, __meta_dockerswarm_task_slot ]
        separator: '.'
        target_label: instance
      - source_labels: [ __meta_dockerswarm_node_hostname ]
        target_label: node_name
      - source_labels: [ __meta_dockerswarm_service_name ]
        target_label: service_name
      - source_labels: [ __meta_dockerswarm_service_label_com_docker_stack_namespace ]
        target_label: stack_name
      - source_labels: [ __meta_dockerswarm_task_container_id ]
        target_label: container

